---
- name: install packages dependencies
  dnf:
    state: present
    name:
      - python3-github3py
      - python3-pyyaml
      - git
      - crontabs
      - python3-pip
      - python3-tqdm
      - ansible
      - vagrant
      - libvirt
      - vagrant-libvirt
      - rsync
      - libguestfs-tools-c  # required for vagrant package command

- name: install pip dependencies
  pip:
    executable: pip3
    name:
      - CacheControl
      - requests
      - gitpython
      - ryd

- name: create base directory
  file:
    path: "{{ basedir }}"
    state: directory
    owner: root
    group: root
    mode: 0700

- name: create configuration file
  template:
    src: config.yml
    dest: "{{ basedir }}/config.yml"

- name: create config directory if it doesn't exist
  file:
    path: /root/.config/
    state: directory
    owner: root
    group: root
    mode: 0700

- name: create Vagrant atlas conf file
  template:
    src: vagrant_config.yml
    dest: "/root/.config/atlas_box_uploader.yaml"
    owner: root
    group: root
    mode: 0600

- name: copy openclose_pr.py script
  copy:
    src: "{{ playbook_dir }}/../github/open_close_pr.py"
    dest: "{{ basedir }}"

- name: create /root/.ssh directory
  file:
    path: /root/.ssh
    state: directory
    mode: 0755
    owner: root
    group: root

- name: copy git ssh key
  copy:
    src: "{{ git_sshkey }}"
    dest: "/root/.ssh/git_ssh_key"
    mode: 0600
    owner: root
    group: root

- name: configure ssh to use the right ssh key when using git
  blockinfile:
    path: /root/.ssh/config
    create: yes
    block: |
          Host github_pr_tool
            Hostname github.com
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
            IdentityFile /root/.ssh/git_ssh_key


- name: clone freeipa-pr-ci repo
  git:
    dest: "{{ basedir }}/freeipa-pr-ci"
    repo: "{{ pr_ci_repo }}"
    force: true

- name: Fix git user.email
  git_config:
    name: user.email
    scope: global
    value: "root@{{ ansible_fqdn }}"

- name: clone freeipa fork
  git:
    repo: "git@github_pr_tool:{{ repo_owner }}/freeipa.git"
    ssh_opts: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    dest: "{{ basedir }}/freeipa"
    update: no

# this is done to avoid confusion between the original remote (freeipa/freeipa)
- name: rename remote origin to mygithub
  shell: "cd {{ basedir }}/freeipa; git remote rename origin mygithub"
  ignore_errors: True


- name: start&enable libvirt services
  service:
    name: "{{ item }}"
    enabled: true
    state: started
  with_items:
    - virtlogd
    - libvirtd

- name: enable cron journals
  lineinfile:
    path: /etc/sysconfig/crond
    regexp: '^CRONDARGS='
    line: CRONDARGS=-s

- name: restart cron service
  service:
    name: crond
    enabled: true
    state: restarted
