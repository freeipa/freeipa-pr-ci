---
- name: update distro packages
  dnf:
    name: '*'
    state: latest

# temporary workaround for rawhide issue
- name: remove packages that cause conflicts on rawhide
  dnf:
    name:
      - gdbm
      - python2-chardet
    state: absent
  when: fedora_version in ['rawhide', '30']

- name: install freeipa rpms with dependencies
  shell: dnf install -y /vagrant/rpms/*.rpm

- name: remove freeipa packages while keeping dependencies
  shell: "rpm -e --nodeps '{{ item }}'"
  with_items:
    - freeipa-client
    - freeipa-client-common
    - freeipa-client-debuginfo
    - freeipa-client-epn
    - freeipa-client-samba
    - freeipa-common
    - freeipa-debuginfo
    - freeipa-debugsource
    - freeipa-healthcheck-core
    - freeipa-python-compat
    - freeipa-selinux
    - freeipa-server
    - freeipa-server-common
    - freeipa-server-debuginfo
    - freeipa-server-dns
    - freeipa-server-trust-ad
    - freeipa-server-trust-ad-debuginfo
    - python3-ipaclient
    - python3-ipalib
    - python3-ipaserver
    - python3-ipatests

# this can be removed when python2 is gone completly
- name: remove freeipa python2 packages seperately
  shell: "rpm -e --nodeps '{{ item }}'"
  with_items:
    - python2-ipaclient
    - python2-ipalib
    - python2-ipaserver
    - python2-ipatests
  when: with_python2 is defined and with_python2 == 1

- name: install additional packages
  dnf:
    state: latest
    name:
      - vim
      - NetworkManager
      - xorg-x11-server-Xvfb
      - firefox
      - python3-paramiko
      - firewalld
      - nfs-utils

- name: install Ansible dependencies
  dnf:
    name:
      - python3-pyyaml
      - python3-dnf
      - python3-libselinux
    state: latest
  when: fedora_version != '27'

- name: install Ansible dependencies for fedora 27
  dnf:
    name:
      - python3-dnf
      - python3-PyYAML
      - libselinux-python3
    state: latest
  when: fedora_version == '27'

# Configure firewalld (make sure that ssh is enabled)
# This is using the command line tool till python2/3 firewalld import issues
# are really solved for the ansible firewalld module
#
# This can be used later on:
#   firewalld:
#     service : "{{ item }}"
#     permanent: true
#     state: enabled
#   with_items:
#     - ssh
#
- name: Configure firewalld
  command: >
    firewall-offline-cmd
    --add-service=ssh

# Mask firewalld - No auto-start and also dbus activation
# This can be removed when all tests are able to configure firewalld
#
# If firwalld will not be masked, please enable the following section as
# a replacement for masking firewalld:
#
# - name: Enable and start firewalld
#   systemd:
#     name: firewalld
#     enabled: yes
#     state: started
#
- name: Mask firewalld
  systemd:
    name: firewalld
    enabled: no
    masked: yes

- name: install py3 pip dependencies
  pip:
    executable: pip3
    name: "{{ python_packages_to_install }}"

# TODO: Remove the hard coded version after the fix below is included in a release
# https://github.com/mozilla/geckodriver/issues/1756
- name: download geckodriver
  shell: |
        # VERSION=$(curl https://github.com/mozilla/geckodriver/releases/latest 2>/dev/null | \
        # egrep -o 'href="[^"]*"' | sed 's/href="//' | sed 's/"$//' | \
        # awk -F"/" '{print $NF}')
        VERSION="v0.26.0"
        curl -L "https://github.com/mozilla/geckodriver/releases/download/$VERSION/geckodriver-$VERSION-linux64.tar.gz" | tar xzv -C /opt

- name: download selenium
  shell: |
        URL="https://selenium-release.storage.googleapis.com"
        SRC="$(curl $URL)"
        MAIN_VERSION=$(echo "$SRC" | grep -oP '[\.0-9]*(?=/selenium-server-standalone)' | awk '{max=$1;if($1>max) {max=$1};} END {print max}')
        SUBVERSION=$(echo "$SRC" | grep -oP "(?<=$MAIN_VERSION/selenium-server-standalone-$MAIN_VERSION\.)[0-9]" | awk '{max=$1;if($1>max) {max=$1};} END {print max}')
        SELENIUM_VERSION=$MAIN_VERSION.$SUBVERSION
        SELENIUM_JAR=selenium-server-standalone-${SELENIUM_VERSION}.jar
        curl "$URL"/$MAIN_VERSION/$SELENIUM_JAR > /opt/selenium.jar
