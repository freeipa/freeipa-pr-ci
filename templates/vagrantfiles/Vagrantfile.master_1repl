# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Add the following to the topologies section of your test definitions:
#
# master_1repl: &master_1repl
#   name: master_1repl
#   cpu: 4
#   memory: 6750

Vagrant.configure(2) do |config|

    config.ssh.username = "root"

    config.vm.synced_folder "./", "/vagrant",
    {% if vagrant_template_name == "freeipa/ci-ipa-4-6-f27" %}
        type: "nfs", nfs_udp: false
    {% else %}
        type: "sshfs", sshfs_opts_append: "-o cache=no"
    {% endif %}

    config.vm.box = "{{ vagrant_template_name }}"
    config.vm.box_version = "{{ vagrant_template_version }}"

    config.vm.provider "libvirt" do |domain, override|
        # Defaults for masters and replica
        # WARNING: Do not overcommit CPUs, it causes issues during
        # provisioning, when RPMs are installed
        domain.cpus = 1
        domain.memory = 2750

        # Nested virtualization options
        domain.nested = true
        domain.cpu_mode = "host-passthrough"

        # Disable graphics
        domain.graphics_type = "none"

        domain.volume_cache = "unsafe"
    end


    config.vm.define "controller" , primary: true do |controller|
        controller.vm.provider "libvirt" do |domain,override|
            # Less resources needed for controller - same amount as the clients
            domain.memory = 1250
        end

        controller.vm.provision :ansible do |ansible|
            # Disable default limit to connect to all the machines
            ansible.limit = "all"
            ansible.playbook = "../../ansible/provision.yml"
            ansible.extra_vars = "vars.yml"
            ansible.compatibility_mode = "2.0"
        end
    end


    config.vm.define "master"  do |master|
    end


    config.vm.define "replica0"  do |replica0|
    end

end
