#!/bin/python3
import argparse
import logging
import sys
from tasks import logging_init_stream_handler, RunPytest


def parse_args():
    desc = 'Run FreeIPA pytests'
    parser = argparse.ArgumentParser(
        prog='run-pytest',
        description=desc)

    parser.add_argument('--build_url', '-b',
        help='URL of build job to be tested',
        required=True)
    parser.add_argument('--test-suite', '-t',
        help='Pytest test suite to be executed',
        required=True)
    parser.add_argument('--template-name',
        help='name of vargant template box',
        required=True)
    parser.add_argument('--template-version',
        help='version of vargant template box',
        required=True)
    parser.add_argument('--url-only', '-u',
        help='Disable stdout logging and only print job URL',
        action='store_true',
        default=False)
    parser.add_argument('--no-destroy',
        help='Keep VMs running',
        action='store_true',
        default=False)
    parser.add_argument('--timeout',
        help='Time in seconds, after which the task will be aborted',
        default=None)

    return parser.parse_args()


def main():
    args = parse_args()
    logging_init_stream_handler(noout=args.url_only)
    template = {'name': args.template_name,
                'version': args.template_version}
    job = RunPytest(template, build_url=args.build_url,
                    test_suite=args.test_suite, no_destroy=args.no_destroy,
                    timeout=args.timeout)
    job()
    if args.url_only:
        print(job.remote_url)
    sys.exit(job.returncode)


if __name__ == '__main__':
    main()
